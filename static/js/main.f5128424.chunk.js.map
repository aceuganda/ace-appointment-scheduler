{"version":3,"sources":["components/AppointmentApp.js","App.js","serviceWorker.js","index.js"],"names":["AppointmentApp","props","context","handleNext","stepIndex","state","setState","finished","handlePrev","purpose","purposeValid","validatePurpose","firstName","lastName","organisation","email","startDate","endDate","agreementModalOpen","confirmationModalOpen","appointmentDateSelected","validEmail","validPhone","smallScreen","window","innerWidth","startTime","Date","endTime","loading","skillset","analysis","number","description","recommendation","vrPurpose","vrOther","other","charge","agreement","chargeAmount","p","this","a","c","date","st","moment","format","ed","start","end","d","duration","diff","parseInt","asHours","phone","setTimeout","confirmationSnackbarMessage","confirmationSnackbarOpen","processed","test","phoneNumber","value","isValid","spanStyle","color","style","FormLabel","component","display","marginBottom","marginTop","name","hintText","onChange","evt","newValue","multiLine","RadioButton","marginLeft","val","handleCharge","label","Fragment","handleAgreement","handleChargeAmount","renderStepActions","handleSetvrPurpose","stvryle","floatingLabelText","step","margin","disableTouchRipple","disableFocusRipple","primary","disabled","onClick","backgroundColor","marginRight","isLoading","data","contactFormFilled","modalActions","handleSubmit","title","iconClassNameRight","maxWidth","padding","minHeight","Stepper","activeStep","orientation","linear","errorText","validateEmail","validatePhone","startDateId","endDateId","onDatesChange","focusedInput","onFocusChange","showDefaultInputIcon","appendToBody","showClearDates","numberOfMonths","minimumNights","small","MuiPickersUtilsProvider","utils","MomentUtils","TimePicker","handleStartTime","handleEndTime","handleSetPurpose","renderAdditionalInformation","Link","cursor","variant","labelPosition","fullWidth","modal","open","actions","renderAppointmentConfirmation","onClose","DialogTitle","DialogContent","dividers","DialogContentText","renderAgreement","DialogActions","Button","autoFocus","message","autoHideDuration","onRequestClose","Component","muiTheme","getMuiTheme","palette","primary1Color","primary2Color","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5128424.chunk.js","sourcesContent":["/* eslint-disable */\r\n\r\nimport React, { Component, useState } from \"react\";\r\nimport AppBar from \"material-ui/AppBar\";\r\nimport RaisedButton from \"material-ui/RaisedButton\";\r\nimport FlatButton from \"material-ui/FlatButton\";\r\nimport moment from \"moment\";\r\nimport DatePicker from \"material-ui/DatePicker\";\r\nimport Dialog2 from \"material-ui/Dialog\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\n\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport SelectField from \"material-ui/SelectField\";\r\nimport MenuItem from \"material-ui/MenuItem\";\r\nimport TextField from \"material-ui/TextField\";\r\nimport SnackBar from \"material-ui/Snackbar\";\r\nimport Card from \"material-ui/Card\";\r\nimport LinearProgress from \"material-ui/LinearProgress\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nimport {\r\n  TimePicker,\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport \"react-dates/initialize\";\r\nimport \"react-dates/lib/css/_datepicker.css\";\r\nimport { DateRangePicker } from \"react-dates\";\r\nimport { Step, Stepper, StepLabel, StepContent } from \"material-ui/Stepper\";\r\nimport { RadioButton, RadioButtonGroup } from \"material-ui/RadioButton\";\r\nimport axios from \"axios\";\r\n\r\nconst API_BASE = \"http://localhost:8083/\";\r\n\r\nclass AppointmentApp extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      organisation: \"\",\r\n      email: \"\",\r\n      startDate: null,\r\n      endDate: null,\r\n      agreementModalOpen: false,\r\n      confirmationModalOpen: false,\r\n      appointmentDateSelected: false,\r\n      validEmail: true,\r\n      validPhone: true,\r\n      finished: false,\r\n      smallScreen: window.innerWidth < 768,\r\n      stepIndex: 0,\r\n      startTime: new Date(2019, 12, 16, 8, 0),\r\n      endTime: new Date(2019, 12, 16, 17, 0),\r\n      loading: false,\r\n      purpose: \"\",\r\n      skillset: \"\",\r\n      analysis: \"\",\r\n      number: \"\",\r\n      description: \"\",\r\n      recommendation: \"\",\r\n      vrPurpose: \"\",\r\n      vrOther: \"\",\r\n      other: \"\",\r\n      charge: \"\",\r\n      agreement: \"\",\r\n      chargeAmount: \"\",\r\n      purposeValid: false\r\n    };\r\n  }\r\n\r\n  // componentDidUpdate() {\r\n  //   console.log(\"current state\", this.state);\r\n  // }\r\n\r\n  handleSetPurpose(p) {\r\n    this.setState({ purpose: p, purposeValid: this.validatePurpose(p) });\r\n  }\r\n\r\n  handleAgreement(a) {\r\n    this.setState({ agreement: a });\r\n  }\r\n  handleChargeAmount(a) {\r\n    this.setState({ chargeAmount: a });\r\n  }\r\n\r\n  handleCharge(c) {\r\n    this.setState({ charge: c });\r\n    if (c === \"no\") {\r\n      this.setState({ chargeAmount: \"\" }); //reset chargeAmount state incase somone selects no\r\n    }\r\n  }\r\n  handleSetvrPurpose(p) {\r\n    this.setState({ vrPurpose: p });\r\n  }\r\n  handleStartTime(date) {\r\n    this.setState({ startTime: date });\r\n  }\r\n  handleEndTime(date) {\r\n    this.setState({ endTime: date });\r\n  }\r\n  handleSubmit() {\r\n    this.setState({ confirmationModalOpen: false, loading: true });\r\n    let st = moment(this.state.startTime).format(\"HH:mm:ss a\");\r\n    let ed = moment(this.state.endTime).format(\"HH:mm:ss a\");\r\n\r\n    let start = moment(st, \"HH:mm:ss a\");\r\n    let end = moment(ed, \"HH:mm:ss a\");\r\n    let d = moment.duration(end.diff(start));\r\n    let duration = parseInt(d.asHours());\r\n    const newAppointment = {\r\n      name: this.state.firstName + \" \" + this.state.lastName,\r\n      email: this.state.email,\r\n      phone: this.state.phone,\r\n      organisation: this.state.organisation,\r\n      purpose:\r\n        this.state.purpose === \"Other\" ? this.state.other : this.state.purpose,\r\n      skillset: this.state.skillset,\r\n      analysis: this.state.analysis,\r\n      number: this.state.number,\r\n      description: this.state.description,\r\n      recommendation: this.state.description,\r\n      vrPurpose:\r\n        this.state.vrPurpose === \"vrOther\"\r\n          ? this.state.vrOther\r\n          : this.state.vrPurpose,\r\n      slot_startDate: moment(this.state.startDate).format(\"YYYY-DD-MM\"),\r\n      slot_endDate: moment(this.state.endDate).format(\"YYYY-DD-MM\"),\r\n      slot_startTime: st,\r\n      slot_endTime: ed,\r\n      slot_days: this.state.endDate.diff(this.state.startDate, \"days\") + 1,\r\n      slot_hours: duration\r\n    };\r\n    // console.log(\"form\", newAppointment);\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        confirmationSnackbarMessage: \"Appointment succesfully added!\",\r\n        confirmationSnackbarOpen: true,\r\n        processed: true,\r\n        loading: false\r\n      });\r\n    }, 3500);\r\n\r\n    // axios\r\n    //   .post(API_BASE + \"api/appointmentCreate\", newAppointment)\r\n    //   .then(response =>\r\n    //     this.setState({\r\n    //       confirmationSnackbarMessage: \"Appointment succesfully added!\",\r\n    //       confirmationSnackbarOpen: true,\r\n    //       processed: true,\r\n    //       loading: false\r\n    //     })\r\n    //   )\r\n    //   .catch(err => {\r\n    //     console.log(err);\r\n    //     return this.setState({\r\n    //       confirmationSnackbarMessage: \"Appointment failed to save.\",\r\n    //       confirmationSnackbarOpen: true,\r\n    //       loading: false\r\n    //     });\r\n    //   });\r\n  }\r\n\r\n  handleNext = () => {\r\n    const { stepIndex } = this.state;\r\n    this.setState({\r\n      stepIndex: stepIndex + 1,\r\n      finished: stepIndex >= 5\r\n    });\r\n  };\r\n\r\n  handlePrev = () => {\r\n    const { stepIndex } = this.state;\r\n    if (stepIndex > 0) {\r\n      this.setState({ stepIndex: stepIndex - 1 });\r\n      if (stepIndex === 4) {\r\n        this.setState({ purpose: \"\", purposeValid: this.validatePurpose(\"\") });\r\n        // console.log(\"handle previous step 3\");\r\n        // this.state.purpose !== \"\"\r\n        //   ? this.setState({\r\n        //       purpose: \"\",\r\n        //       purposeValid: this.validatePurpose(\"\")\r\n        //     })\r\n        //   : null;\r\n      }\r\n    }\r\n  };\r\n  validateEmail(email) {\r\n    const regex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return regex.test(email)\r\n      ? this.setState({ email: email, validEmail: true })\r\n      : this.setState({ validEmail: false });\r\n  }\r\n  validatePhone(phoneNumber) {\r\n    const regex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\r\n    return regex.test(phoneNumber)\r\n      ? this.setState({ phone: phoneNumber, validPhone: true })\r\n      : this.setState({ validPhone: false });\r\n  }\r\n  validatePurpose(value) {\r\n    let isValid = false;\r\n    if (value !== \"\") {\r\n      isValid = true;\r\n    }\r\n\r\n    return isValid;\r\n\r\n    // if (this.state.purpose === \"\") {\r\n    //   labelProps = (\r\n    //     <Typography variant=\"caption\" color=\"error\">\r\n    //       Please provide the booking purpose!\r\n    //     </Typography>\r\n    //   );\r\n    // }\r\n  }\r\n\r\n  //end of ...\r\n  renderAgreement() {\r\n    return (\r\n      <section>\r\n        <p>\r\n          Request to use equipment, computers or facilities shall be made at\r\n          least 3 working days prior through IDI ACE Bioinformatics authorities.\r\n        </p>{\" \"}\r\n        <p>\r\n          No person shall without authority access or attempt to gain access to\r\n          any computer and or facility.\r\n        </p>\r\n        <p>\r\n          The granted access will only be for a limited time only as requested\r\n          for by the user, but can be extended or reduced depending on the\r\n          availability of the facility all at the discretion of the Facilities\r\n          manager.\r\n        </p>\r\n        <p>\r\n          Access shall only be to very specific information and will not include\r\n          access to information that the user does not require access to.\r\n        </p>\r\n        <p>\r\n          The ACE designee must be present and onsite when the facility or\r\n          equipment are being used.\r\n        </p>\r\n        <p>\r\n          IDI/designee will assume the responsibility of supervising the user to\r\n          ensure compliance and protecting the facilities.\r\n        </p>\r\n        <p>\r\n          Facility use and or use of computers shall be on first come first\r\n          serve basis, but manager/in-charge may give priority\r\n        </p>\r\n        <p>\r\n          While using the facility, cell phones and other gadgets should be set\r\n          silent or turned off to avoid disruptions and any applications with\r\n          audio output should be used with headphones.\r\n        </p>\r\n        <p>\r\n          Conversations and discussions should also be kept silent to avoid\r\n          disrupting other users\r\n        </p>\r\n        <p>\r\n          Users of the computer clusters should avoid saving their work on the\r\n          computers as these would be deleted. Files must be saved on personal\r\n          hard drives on USB/Flash drive after a day’s work to avoid loss.\r\n        </p>\r\n        <p>\r\n          Personal, sensitive and confidential data types shall not be stored on\r\n          external hosted service such as Dropbox or Google docs.\r\n        </p>\r\n        <p>\r\n          Request and approval must be sought from the ACE bioinformatics\r\n          head/manager and head of department to use the data.\r\n        </p>\r\n        <p>\r\n          Only the ACE bioinformatics IT systems manager will be permitted to\r\n          store, make manipulations and backup data. Outside users are\r\n          discouraged from attempting to make any changes to data and any such\r\n          changes whether intentional or accidental must be reported.\r\n        </p>\r\n        <p>\r\n          Accessing pornography or profane content and using the facility to\r\n          disseminate offensive, threatening or abusive messages is strictly\r\n          prohibited in this facility. Individuals who violate this prohibition\r\n          will be subject to disciplinary action that may result into loss of\r\n          access or ban.\r\n        </p>\r\n        <p>\r\n          Non facility staff and students are prohibited from changing any\r\n          computer hardware or software. This violation may lead to loss of\r\n          facility privileges.\r\n        </p>\r\n        <p>\r\n          No external user shall remove, interfere or tamper with any components\r\n          of the facility or computer or use any computer system in ways that\r\n          interfere with its use\r\n        </p>\r\n        <p>\r\n          Damage to computers or facilities will lead to fines and may in some\r\n          cases result into loss or denial of facility access privileges\r\n        </p>\r\n        <p>\r\n          A record shall be maintained to indicate arrival and departure of\r\n          visitors or persons utilising the facility\r\n        </p>\r\n        <p>\r\n          No food or drinks shall be consumed in the computer rooms. Any\r\n          accidental spills on equipment and computers must be reported after\r\n          which an assessment shall be done to determine damage.\r\n        </p>\r\n      </section>\r\n    );\r\n  }\r\n  renderAppointmentConfirmation() {\r\n    const spanStyle = { color: \"#00C853\" };\r\n    return (\r\n      <section>\r\n        <p>\r\n          Name:{\" \"}\r\n          <span style={spanStyle}>\r\n            {this.state.firstName} {this.state.lastName}\r\n          </span>\r\n        </p>\r\n        <p>\r\n          Number: <span style={spanStyle}>{this.state.phone}</span>\r\n        </p>\r\n        <p>\r\n          Email: <span style={spanStyle}>{this.state.email}</span>\r\n        </p>\r\n        <p>\r\n          Appointment Date: From{\" \"}\r\n          <span style={spanStyle}>\r\n            {moment(this.state.startDate).format(\"dddd[,] MMMM Do[,] YYYY\")}\r\n          </span>{\" \"}\r\n          to{\" \"}\r\n          <span style={spanStyle}>\r\n            {moment(this.state.endDate).format(\"dddd[,] MMMM Do[,] YYYY\")}\r\n          </span>{\" \"}\r\n        </p>\r\n        <p>\r\n          Appointment Time: From{\" \"}\r\n          <span style={spanStyle}>\r\n            {moment(this.state.startTime).format(\"HH:mm\")}\r\n          </span>{\" \"}\r\n          to{\" \"}\r\n          <span style={spanStyle}>\r\n            {moment(this.state.endTime).format(\"HH:mm\")}\r\n          </span>\r\n        </p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  renderAdditionalInformation() {\r\n    switch (this.state.purpose) {\r\n      case \"Individual Research/Compute Core\":\r\n        return (\r\n          <div>\r\n            <section>\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                How many people will be attending the meeting?\r\n              </FormLabel>\r\n              <TextField\r\n                style={{ display: \"block\", marginBottom: 15, marginTop: 15 }}\r\n                name=\"number\"\r\n                hintText=\"Number\"\r\n                onChange={(evt, newValue) =>\r\n                  this.setState({ number: newValue })\r\n                }\r\n              />\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                What type of Analysis do you expect to do?\r\n              </FormLabel>\r\n              <TextField\r\n                multiLine={true}\r\n                style={{ display: \"block\", marginBottom: 15, marginTop: 15 }}\r\n                name=\"analysis\"\r\n                hintText=\"Analysis\"\r\n                onChange={(evt, newValue) =>\r\n                  this.setState({ analysis: newValue })\r\n                }\r\n              />\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                Could you provide us with a brief description of the software\r\n                tools, nature of data and an estimate of the amount of computing\r\n                resources you expect to use.\r\n              </FormLabel>\r\n              <TextField\r\n                multiLine={true}\r\n                style={{ display: \"block\", marginBottom: 15, marginTop: 15 }}\r\n                name=\"description\"\r\n                hintText=\"Description\"\r\n                onChange={(evt, newValue) =>\r\n                  this.setState({ description: newValue })\r\n                }\r\n              />\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                Please share with us any additional information/Suggestions that\r\n                may be helpful to us scheduling and prepairing for your visit.\r\n              </FormLabel>\r\n              <TextField\r\n                multiLine={true}\r\n                style={{ display: \"block\", marginBottom: 15, marginTop: 15 }}\r\n                name=\"recommendation\"\r\n                hintText=\"Recommendation\"\r\n                onChange={(evt, newValue) =>\r\n                  this.setState({ recommendation: newValue })\r\n                }\r\n              />\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                Admission Type: Charge or no Charge\r\n                <small>\r\n                  <br />\r\n                  Please indicate whether or not you should be charged for the\r\n                  service. Please note that priority may be given to chargeable\r\n                  users.\r\n                </small>\r\n              </FormLabel>\r\n              <RadioButtonGroup\r\n                style={{\r\n                  marginTop: 15,\r\n                  marginLeft: 15\r\n                }}\r\n                name=\"charge\"\r\n                onChange={(evt, val) => this.handleCharge(val)}\r\n              >\r\n                <RadioButton\r\n                  label=\"Yes, I would like to be charged\"\r\n                  value=\"yes\"\r\n                  style={{\r\n                    marginBottom: 15\r\n                  }}\r\n                />\r\n                <RadioButton\r\n                  label=\"Free Admission\"\r\n                  value=\"no\"\r\n                  style={{\r\n                    marginBottom: 15\r\n                  }}\r\n                />\r\n              </RadioButtonGroup>\r\n\r\n              {this.state.charge === \"no\" ? (\r\n                <React.Fragment>\r\n                  <FormLabel component=\"legend\">\r\n                    {\" \"}\r\n                    Free Admission\r\n                    <small>\r\n                      <br />\r\n                      Condition: Kindly note that Free admissions may only apply\r\n                      to a few users and for a limited time only as priority may\r\n                      be given to chargeable users.\r\n                      <br /> I agree\r\n                    </small>\r\n                  </FormLabel>\r\n                  <RadioButtonGroup\r\n                    style={{\r\n                      marginTop: 15,\r\n                      marginLeft: 15\r\n                    }}\r\n                    name=\"agreement\"\r\n                    onChange={(evt, val) => this.handleAgreement(val)}\r\n                  >\r\n                    <RadioButton\r\n                      label=\"Yes, I agree\"\r\n                      value=\"yes\"\r\n                      style={{\r\n                        marginBottom: 15\r\n                      }}\r\n                    />\r\n                    <RadioButton\r\n                      label=\"No\"\r\n                      value=\"no\"\r\n                      style={{\r\n                        marginBottom: 15\r\n                      }}\r\n                    />\r\n                  </RadioButtonGroup>\r\n                </React.Fragment>\r\n              ) : this.state.charge === \"yes\" ? (\r\n                <React.Fragment>\r\n                  <FormLabel component=\"legend\">\r\n                    {\" \"}\r\n                    Cost\r\n                    <small>\r\n                      <br />\r\n                      Note: The charges contained here are negotiable, but will\r\n                      gerally depend on how long you need the facility\r\n                    </small>\r\n                  </FormLabel>\r\n                  <RadioButtonGroup\r\n                    style={{\r\n                      marginTop: 15,\r\n                      marginLeft: 15\r\n                    }}\r\n                    name=\"chargeAmount\"\r\n                    onChange={(evt, val) => this.handleChargeAmount(val)}\r\n                  >\r\n                    <RadioButton\r\n                      label=\"Per Day = $1\"\r\n                      value=\"Per Day = $1\"\r\n                      style={{\r\n                        marginBottom: 15\r\n                      }}\r\n                    />\r\n                    <RadioButton\r\n                      label=\"Per Week = 2$\"\r\n                      value=\"Per Week = 2$\"\r\n                      style={{\r\n                        marginBottom: 15\r\n                      }}\r\n                    />\r\n                  </RadioButtonGroup>\r\n                </React.Fragment>\r\n              ) : null}\r\n            </section>{\" \"}\r\n            {this.renderStepActions(4)}\r\n          </div>\r\n        );\r\n\r\n      case \"ACE Tour\":\r\n        return (\r\n          <div>\r\n            <section>\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                How many people will be attending the meeting?\r\n              </FormLabel>\r\n              <TextField\r\n                style={{ display: \"block\", marginBottom: 15, marginTop: 15 }}\r\n                name=\"number\"\r\n                hintText=\"Number\"\r\n                onChange={(evt, newValue) =>\r\n                  this.setState({ number: newValue })\r\n                }\r\n              />\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                Please share with us any additional information/Suggestions that\r\n                may be helpful to us scheduling and prepairing for your visit.\r\n              </FormLabel>\r\n              <TextField\r\n                multiLine={true}\r\n                style={{ display: \"block\", marginBottom: 15, marginTop: 15 }}\r\n                name=\"recommendation\"\r\n                hintText=\"Recommendation\"\r\n                onChange={(evt, newValue) =>\r\n                  this.setState({ recommendation: newValue })\r\n                }\r\n              />\r\n            </section>\r\n            {this.renderStepActions(4)}\r\n          </div>\r\n        );\r\n\r\n      case \"TeleLearning Facility/ Training/ Workshop\":\r\n        return (\r\n          <div>\r\n            <section>\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                How many people will be attending the meeting?\r\n              </FormLabel>\r\n              <TextField\r\n                style={{ display: \"block\", marginBottom: 15, marginTop: 15 }}\r\n                name=\"number\"\r\n                hintText=\"Number\"\r\n                onChange={(evt, newValue) =>\r\n                  this.setState({ number: newValue })\r\n                }\r\n              />\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                Please share with us any additional information/Suggestions that\r\n                may be helpful to us scheduling and prepairing for your visit.\r\n              </FormLabel>\r\n              <TextField\r\n                multiLine={true}\r\n                style={{ display: \"block\", marginBottom: 15, marginTop: 15 }}\r\n                name=\"recommendation\"\r\n                hintText=\"Recommendation\"\r\n                onChange={(evt, newValue) =>\r\n                  this.setState({ recommendation: newValue })\r\n                }\r\n              />\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                Admission Type: Charge or no Charge\r\n                <small>\r\n                  <br />\r\n                  Please indicate whether or not you should be charged for the\r\n                  service. Please note that priority may be given to chargeable\r\n                  users.\r\n                </small>\r\n              </FormLabel>\r\n              <RadioButtonGroup\r\n                style={{\r\n                  marginTop: 15,\r\n                  marginLeft: 15\r\n                }}\r\n                name=\"charge\"\r\n                onChange={(evt, val) => this.handleCharge(val)}\r\n              >\r\n                <RadioButton\r\n                  label=\"Yes, I would like to be charged\"\r\n                  value=\"yes\"\r\n                  style={{\r\n                    marginBottom: 15\r\n                  }}\r\n                />\r\n                <RadioButton\r\n                  label=\"Free Admission\"\r\n                  value=\"no\"\r\n                  style={{\r\n                    marginBottom: 15\r\n                  }}\r\n                />\r\n              </RadioButtonGroup>\r\n\r\n              {this.state.charge === \"no\" ? (\r\n                <React.Fragment>\r\n                  <FormLabel component=\"legend\">\r\n                    {\" \"}\r\n                    Free Admission\r\n                    <small>\r\n                      <br />\r\n                      Condition: Kindly note that Free admissions may only apply\r\n                      to a few users and for a limited time only as priority may\r\n                      be given to chargeable users.\r\n                      <br /> I agree\r\n                    </small>\r\n                  </FormLabel>\r\n                  <RadioButtonGroup\r\n                    style={{\r\n                      marginTop: 15,\r\n                      marginLeft: 15\r\n                    }}\r\n                    name=\"agreement\"\r\n                    onChange={(evt, val) => this.handleAgreement(val)}\r\n                  >\r\n                    <RadioButton\r\n                      label=\"Yes, I agree\"\r\n                      value=\"yes\"\r\n                      style={{\r\n                        marginBottom: 15\r\n                      }}\r\n                    />\r\n                    <RadioButton\r\n                      label=\"No\"\r\n                      value=\"no\"\r\n                      style={{\r\n                        marginBottom: 15\r\n                      }}\r\n                    />\r\n                  </RadioButtonGroup>\r\n                </React.Fragment>\r\n              ) : this.state.charge === \"yes\" ? (\r\n                <React.Fragment>\r\n                  <FormLabel component=\"legend\">\r\n                    {\" \"}\r\n                    Cost\r\n                    <small>\r\n                      <br />\r\n                      Note: The charges contained here are negotiable, but will\r\n                      gerally depend on how long you need the facility\r\n                    </small>\r\n                  </FormLabel>\r\n                  <RadioButtonGroup\r\n                    style={{\r\n                      marginTop: 15,\r\n                      marginLeft: 15\r\n                    }}\r\n                    name=\"chargeAmount\"\r\n                    onChange={(evt, val) => this.handleChargeAmount(val)}\r\n                  >\r\n                    <RadioButton\r\n                      label=\"Per Day = $1\"\r\n                      value=\"Per Day = $1\"\r\n                      style={{\r\n                        marginBottom: 15\r\n                      }}\r\n                    />\r\n                    <RadioButton\r\n                      label=\"Per Week = 2$\"\r\n                      value=\"Per Week = 2$\"\r\n                      style={{\r\n                        marginBottom: 15\r\n                      }}\r\n                    />\r\n                  </RadioButtonGroup>\r\n                </React.Fragment>\r\n              ) : null}\r\n            </section>\r\n            {this.renderStepActions(4)}\r\n          </div>\r\n        );\r\n      case \"Other\":\r\n        return (\r\n          <div>\r\n            <section>\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                How many people will be attending the meeting?\r\n              </FormLabel>\r\n              <TextField\r\n                style={{ display: \"block\", marginBottom: 15, marginTop: 15 }}\r\n                name=\"number\"\r\n                hintText=\"Number\"\r\n                onChange={(evt, newValue) =>\r\n                  this.setState({ number: newValue })\r\n                }\r\n              />\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                Could you provide us with a brief description of the nature of\r\n                data and an estimate of the amount of computing resources you\r\n                expect to use.\r\n              </FormLabel>\r\n              <TextField\r\n                multiLine={true}\r\n                style={{ display: \"block\", marginBottom: 15, marginTop: 15 }}\r\n                name=\"description\"\r\n                hintText=\"Description\"\r\n                onChange={(evt, newValue) =>\r\n                  this.setState({ description: newValue })\r\n                }\r\n              />\r\n            </section>\r\n            {this.renderStepActions(4)}\r\n          </div>\r\n        );\r\n      case \"Virtual Reality Facility\":\r\n        return (\r\n          <div>\r\n            <section>\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                How many people will be attending the meeting?\r\n              </FormLabel>\r\n              <TextField\r\n                style={{ display: \"block\", marginBottom: 15, marginTop: 15 }}\r\n                name=\"number\"\r\n                hintText=\"Number\"\r\n                onChange={(evt, newValue) =>\r\n                  this.setState({ number: newValue })\r\n                }\r\n              />\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                Purpose for Visiting the VR lab\r\n              </FormLabel>\r\n              <RadioButtonGroup\r\n                style={{\r\n                  marginTop: 15,\r\n                  marginLeft: 15\r\n                }}\r\n                name=\"vrPurpose\"\r\n                onChange={(evt, val) => this.handleSetvrPurpose(val)}\r\n              >\r\n                <RadioButton\r\n                  label=\"VR Demonstrations\"\r\n                  value=\"VR Demonstrations\"\r\n                  style={{\r\n                    marginBottom: 15\r\n                  }}\r\n                />\r\n                <RadioButton\r\n                  label=\"Content Creation\"\r\n                  value=\"Content Creation\"\r\n                  style={{\r\n                    marginBottom: 15\r\n                  }}\r\n                />\r\n\r\n                <RadioButton\r\n                  label=\"Training/Workshop\"\r\n                  value=\"Training/Workshop\"\r\n                  style={{\r\n                    marginBottom: 15\r\n                  }}\r\n                />\r\n                <RadioButton\r\n                  label=\"Other\"\r\n                  value=\"vrOther\"\r\n                  stvryle={{\r\n                    marginBottom: 15\r\n                  }}\r\n                />\r\n              </RadioButtonGroup>\r\n              {this.state.vrPurpose === \"vrOther\" ? (\r\n                <TextField\r\n                  style={{ display: \"block\" }}\r\n                  name=\"other\"\r\n                  hintText=\"Other\"\r\n                  floatingLabelText=\"Other\"\r\n                  onChange={(evt, newValue) =>\r\n                    this.setState({ vrOther: newValue })\r\n                  }\r\n                />\r\n              ) : null}\r\n\r\n              {this.state.vrPurpose === \"Training/Workshop\" ? (\r\n                <React.Fragment>\r\n                  <FormLabel component=\"legend\">\r\n                    {\" \"}\r\n                    Could you provide us with a brief description of the\r\n                    software tools, nature of data and an estimate of the amount\r\n                    of computing resources you expect to use.\r\n                  </FormLabel>\r\n                  <TextField\r\n                    multiLine={true}\r\n                    style={{\r\n                      display: \"block\",\r\n                      marginBottom: 15,\r\n                      marginTop: 15\r\n                    }}\r\n                    name=\"description\"\r\n                    hintText=\"Description\"\r\n                    onChange={(evt, newValue) =>\r\n                      this.setState({ description: newValue })\r\n                    }\r\n                  />\r\n                  <FormLabel component=\"legend\">\r\n                    {\" \"}\r\n                    Admission Type: Charge or no Charge\r\n                    <small>\r\n                      <br />\r\n                      Please indicate whether or not you should be charged for\r\n                      the service. Please note that priority may be given to\r\n                      chargeable users.\r\n                    </small>\r\n                  </FormLabel>\r\n                  <RadioButtonGroup\r\n                    style={{\r\n                      marginTop: 15,\r\n                      marginLeft: 15\r\n                    }}\r\n                    name=\"charge\"\r\n                    onChange={(evt, val) => this.handleCharge(val)}\r\n                  >\r\n                    <RadioButton\r\n                      label=\"Yes, I would like to be charged\"\r\n                      value=\"yes\"\r\n                      style={{\r\n                        marginBottom: 15\r\n                      }}\r\n                    />\r\n                    <RadioButton\r\n                      label=\"Free Admission\"\r\n                      value=\"no\"\r\n                      style={{\r\n                        marginBottom: 15\r\n                      }}\r\n                    />\r\n                  </RadioButtonGroup>\r\n\r\n                  {this.state.charge === \"no\" ? (\r\n                    <React.Fragment>\r\n                      <FormLabel component=\"legend\">\r\n                        {\" \"}\r\n                        Free Admission\r\n                        <small>\r\n                          <br />\r\n                          Condition: Kindly note that Free admissions may only\r\n                          apply to a few users and for a limited time only as\r\n                          priority may be given to chargeable users.\r\n                          <br /> I agree\r\n                        </small>\r\n                      </FormLabel>\r\n                      <RadioButtonGroup\r\n                        style={{\r\n                          marginTop: 15,\r\n                          marginLeft: 15\r\n                        }}\r\n                        name=\"agreement\"\r\n                        onChange={(evt, val) => this.handleAgreement(val)}\r\n                      >\r\n                        <RadioButton\r\n                          label=\"Yes, I agree\"\r\n                          value=\"yes\"\r\n                          style={{\r\n                            marginBottom: 15\r\n                          }}\r\n                        />\r\n                        <RadioButton\r\n                          label=\"No\"\r\n                          value=\"no\"\r\n                          style={{\r\n                            marginBottom: 15\r\n                          }}\r\n                        />\r\n                      </RadioButtonGroup>\r\n                    </React.Fragment>\r\n                  ) : this.state.charge === \"yes\" ? (\r\n                    <React.Fragment>\r\n                      <FormLabel component=\"legend\">\r\n                        {\" \"}\r\n                        Cost\r\n                        <small>\r\n                          <br />\r\n                          Note: The charges contained here are negotiable, but\r\n                          will gerally depend on how long you need the facility\r\n                        </small>\r\n                      </FormLabel>\r\n                      <RadioButtonGroup\r\n                        style={{\r\n                          marginTop: 15,\r\n                          marginLeft: 15\r\n                        }}\r\n                        name=\"chargeAmount\"\r\n                        onChange={(evt, val) => this.handleChargeAmount(val)}\r\n                      >\r\n                        <RadioButton\r\n                          label=\"Per Day = $1\"\r\n                          value=\"Per Day = $1\"\r\n                          style={{\r\n                            marginBottom: 15\r\n                          }}\r\n                        />\r\n                        <RadioButton\r\n                          label=\"Per Week = 2$\"\r\n                          value=\"Per Week = 2$\"\r\n                          style={{\r\n                            marginBottom: 15\r\n                          }}\r\n                        />\r\n                      </RadioButtonGroup>\r\n                    </React.Fragment>\r\n                  ) : null}\r\n                </React.Fragment>\r\n              ) : null}\r\n            </section>\r\n            {this.renderStepActions(4)}\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <div>\r\n            <section>\r\n              <FormLabel component=\"legend\">\r\n                {\" \"}\r\n                Please Choose an option from the previous section for us to know\r\n                your needs\r\n              </FormLabel>\r\n            </section>\r\n            {this.renderStepActions(4)}\r\n          </div>\r\n        );\r\n        break;\r\n    }\r\n  }\r\n  renderStepActions(step) {\r\n    const { stepIndex } = this.state;\r\n\r\n    return (\r\n      <div style={{ margin: \"12px 0\" }}>\r\n        <RaisedButton\r\n          // label={stepIndex === 5 ? \"Finish\" : \"Next\"}\r\n\r\n          label={\r\n            stepIndex === 5\r\n              ? \"Finish\"\r\n              : this.state.purposeValid === false && stepIndex === 3\r\n              ? \"Choose an Option\"\r\n              : stepIndex === 1 &&\r\n                this.state.startDate === null &&\r\n                this.state.endDate === null\r\n              ? \"Choose a date\"\r\n              : \"Next\"\r\n          }\r\n          disableTouchRipple={true}\r\n          disableFocusRipple={true}\r\n          primary={true}\r\n          disabled={\r\n            stepIndex === 3\r\n              ? !this.state.purposeValid\r\n              : stepIndex === 1 &&\r\n                this.state.startDate === null &&\r\n                this.state.endDate === null\r\n              ? true\r\n              : null\r\n          }\r\n          onClick={this.handleNext}\r\n          backgroundColor=\"#00C853 !important\"\r\n          style={{ marginRight: 12, backgroundColor: \"#00C853\" }}\r\n        />\r\n        {step > 0 && (\r\n          <FlatButton\r\n            label=\"Back\"\r\n            disabled={stepIndex === 0}\r\n            disableTouchRipple={true}\r\n            disableFocusRipple={true}\r\n            // onClick={this.handlePrev}\r\n            onClick={() => {\r\n              this.handlePrev();\r\n              this.state.vrPurpose !== \"\"\r\n                ? this.setState({ vrPurpose: \"\" }) //Reset vrPurpose state field\r\n                : null;\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      finished,\r\n      isLoading,\r\n      smallScreen,\r\n      stepIndex,\r\n      confirmationModalOpen,\r\n      agreementModalOpen,\r\n      confirmationSnackbarOpen,\r\n      ...data\r\n    } = this.state;\r\n    const contactFormFilled =\r\n      data.firstName &&\r\n      data.lastName &&\r\n      data.phone &&\r\n      data.email &&\r\n      data.validPhone &&\r\n      data.skillset &&\r\n      data.validEmail;\r\n\r\n    const DatePickerRange = () => (\r\n      <div>\r\n        <DateRangePicker\r\n          startDate={this.state.startDate} // momentPropTypes.momentObj or null,\r\n          startDateId=\"start1\" // PropTypes.string.isRequired,\r\n          endDate={this.state.endDate} // momentPropTypes.momentObj or null,\r\n          endDateId=\"end1\" // PropTypes.string.isRequired,\r\n          onDatesChange={({ startDate, endDate }) =>\r\n            this.setState({ startDate, endDate })\r\n          } // PropTypes.func.isRequired,\r\n          focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n          onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\r\n          showDefaultInputIcon={true}\r\n          appendToBody={true}\r\n          showClearDates={true}\r\n          numberOfMonths={smallScreen ? 1 : 2}\r\n          minimumNights={0}\r\n          small={true}\r\n        />\r\n      </div>\r\n    );\r\n    const modalActions = [\r\n      <FlatButton\r\n        label=\"Cancel\"\r\n        primary={false}\r\n        onClick={() => this.setState({ confirmationModalOpen: false })}\r\n      />,\r\n      <FlatButton\r\n        label=\"Confirm\"\r\n        style={{ backgroundColor: \"#00C853 !important\" }}\r\n        primary={true}\r\n        onClick={() => this.handleSubmit()}\r\n      />\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <AppBar\r\n          title=\"African Center of Excellence in Bioinformatics\"\r\n          iconClassNameRight=\"muidocs-icon-navigation-expand-more\"\r\n        />\r\n        <section\r\n          style={{\r\n            maxWidth: !smallScreen ? \"80%\" : \"100%\",\r\n            margin: \"auto\",\r\n            marginTop: !smallScreen ? 20 : 0\r\n          }}\r\n        >\r\n          <Card\r\n            style={{\r\n              padding: \"12px 12px 25px 12px\",\r\n              minHeight: smallScreen ? \"100vh\" : null\r\n            }}\r\n          >\r\n            {this.state.loading ? <LinearProgress /> : null}\r\n            <Stepper\r\n              activeStep={stepIndex}\r\n              orientation=\"vertical\"\r\n              linear={false}\r\n            >\r\n              <Step>\r\n                <StepLabel>\r\n                  Share your contact information with us and we'll send you a\r\n                  reminder\r\n                </StepLabel>\r\n                <StepContent>\r\n                  <p>\r\n                    <section>\r\n                      <TextField\r\n                        style={{ display: \"block\" }}\r\n                        name=\"first_name\"\r\n                        hintText=\"First Name\"\r\n                        floatingLabelText=\"First Name\"\r\n                        onChange={(evt, newValue) =>\r\n                          this.setState({ firstName: newValue })\r\n                        }\r\n                        value={this.state.firstName}\r\n                      />\r\n                      <TextField\r\n                        style={{ display: \"block\" }}\r\n                        name=\"last_name\"\r\n                        hintText=\"Last Name\"\r\n                        floatingLabelText=\"Last Name\"\r\n                        onChange={(evt, newValue) =>\r\n                          this.setState({ lastName: newValue })\r\n                        }\r\n                        value={this.state.lastName}\r\n                      />\r\n                      <TextField\r\n                        style={{ display: \"block\" }}\r\n                        name=\"organisation\"\r\n                        hintText=\"Organization\"\r\n                        floatingLabelText=\"Organization\"\r\n                        onChange={(evt, newValue) =>\r\n                          this.setState({ organisation: newValue })\r\n                        }\r\n                        value={this.state.organisation}\r\n                      />\r\n                      <TextField\r\n                        style={{ display: \"block\" }}\r\n                        name=\"email\"\r\n                        hintText=\"youraddress@mail.com\"\r\n                        floatingLabelText=\"Email\"\r\n                        errorText={\r\n                          data.validEmail ? null : \"Enter a valid email address\"\r\n                        }\r\n                        onChange={(evt, newValue) =>\r\n                          this.validateEmail(newValue)\r\n                        }\r\n                        // value={data.validEmail ? this.state.email : null}\r\n                      />\r\n                      <TextField\r\n                        style={{ display: \"block\" }}\r\n                        name=\"phone\"\r\n                        hintText=\"+2567995989\"\r\n                        floatingLabelText=\"Phone\"\r\n                        errorText={\r\n                          data.validPhone ? null : \"Enter a valid phone number\"\r\n                        }\r\n                        onChange={(evt, newValue) =>\r\n                          this.validatePhone(newValue)\r\n                        }\r\n                        // value={this.state.phone}\r\n                      />\r\n\r\n                      <TextField\r\n                        style={{ display: \"block\" }}\r\n                        floatingLabelText=\"Your Speciality\"\r\n                        name=\"skillset\"\r\n                        hintText=\"Your Specilaity\"\r\n                        onChange={(evt, newValue) =>\r\n                          this.setState({ skillset: newValue })\r\n                        }\r\n                        value={this.state.skillset}\r\n                      />\r\n                    </section>\r\n                  </p>\r\n                  {this.renderStepActions(0)}\r\n                </StepContent>\r\n              </Step>\r\n              <Step>\r\n                <StepLabel>\r\n                  Choose an available day for your appointment\r\n                </StepLabel>\r\n\r\n                <StepContent>\r\n                  {DatePickerRange()}\r\n                  {this.renderStepActions(1)}\r\n                </StepContent>\r\n              </Step>\r\n\r\n              <Step>\r\n                <StepLabel>\r\n                  Choose an available time for your appointment\r\n                </StepLabel>\r\n                <StepContent>\r\n                  <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                    <TimePicker\r\n                      label=\"Start Time\"\r\n                      value={this.state.startTime}\r\n                      onChange={date => this.handleStartTime(date)}\r\n                    />\r\n\r\n                    <TimePicker\r\n                      label=\"End Time\"\r\n                      value={this.state.endTime}\r\n                      onChange={date => this.handleEndTime(date)}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n\r\n                  {this.renderStepActions(2)}\r\n                </StepContent>\r\n              </Step>\r\n\r\n              <Step>\r\n                <StepLabel>Fill out your areas of interest</StepLabel>\r\n\r\n                <StepContent>\r\n                  <section>\r\n                    <FormLabel component=\"legend\"> Booking Purpose</FormLabel>\r\n\r\n                    <RadioButtonGroup\r\n                      style={{\r\n                        marginTop: 15,\r\n                        marginLeft: 10\r\n                      }}\r\n                      name=\"purpose\"\r\n                      onChange={(evt, val) => this.handleSetPurpose(val)}\r\n                    >\r\n                      <RadioButton\r\n                        label=\"TeleLearning Facility/ Training/ Workshop\"\r\n                        value=\"TeleLearning Facility/ Training/ Workshop\"\r\n                        style={{\r\n                          marginBottom: 15\r\n                        }}\r\n                      />\r\n                      <RadioButton\r\n                        label=\"Virtual Reality Facility\"\r\n                        value=\"Virtual Reality Facility\"\r\n                        style={{\r\n                          marginBottom: 15\r\n                        }}\r\n                      />\r\n                      <RadioButton\r\n                        label=\"Individual Research/Compute Core\"\r\n                        value=\"Individual Research/Compute Core\"\r\n                        style={{\r\n                          marginBottom: 15\r\n                        }}\r\n                      />\r\n                      <RadioButton\r\n                        label=\"ACE Tour\"\r\n                        value=\"ACE Tour\"\r\n                        style={{\r\n                          marginBottom: 15\r\n                        }}\r\n                      />\r\n\r\n                      <RadioButton\r\n                        label=\"Other\"\r\n                        value=\"Other\"\r\n                        style={{\r\n                          marginBottom: 15\r\n                        }}\r\n                      />\r\n                    </RadioButtonGroup>\r\n                    {this.state.purpose === \"Other\" ? (\r\n                      <TextField\r\n                        style={{ display: \"block\" }}\r\n                        name=\"other\"\r\n                        hintText=\"Please Specify\"\r\n                        floatingLabelText=\"Please Specify\"\r\n                        onChange={(evt, newValue) =>\r\n                          this.setState({ other: newValue })\r\n                        }\r\n                      />\r\n                    ) : null}\r\n                  </section>{\" \"}\r\n                  {this.renderStepActions(3)}\r\n                </StepContent>\r\n              </Step>\r\n              <Step>\r\n                <StepLabel>Additional Information</StepLabel>\r\n\r\n                <StepContent>\r\n                  {this.renderAdditionalInformation()}\r\n                  {/*                   \r\n                  {this.state.purpose === \"Virtual Reality Facility\"\r\n                    ? this.renderStepActions(5)\r\n                    : this.renderInformation()} */}\r\n                </StepContent>\r\n              </Step>\r\n              <Step>\r\n                <StepLabel>Make your Schedule</StepLabel>\r\n\r\n                <StepContent>\r\n                  <section>\r\n                    By clicking submit you are agreeing to the{\" \"}\r\n                    <Link\r\n                      style={{\r\n                        cursor: \"pointer\"\r\n                      }}\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          agreementModalOpen: !this.state.agreementModalOpen\r\n                        })\r\n                      }\r\n                      color=\"secondary\"\r\n                      variant=\"inherit\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                    <RaisedButton\r\n                      style={{ display: \"block\", backgroundColor: \"#00C853\" }}\r\n                      label={\r\n                        contactFormFilled\r\n                          ? \"Schedule\"\r\n                          : \"Fill out your contact information in section 1 to schedule\"\r\n                      }\r\n                      labelPosition=\"before\"\r\n                      primary={true}\r\n                      fullWidth={true}\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          confirmationModalOpen: !this.state\r\n                            .confirmationModalOpen\r\n                        })\r\n                      }\r\n                      disabled={!contactFormFilled || data.processed}\r\n                      style={{ marginTop: 20, maxWidth: 100 }}\r\n                    />\r\n                  </section>{\" \"}\r\n                  {this.renderStepActions(5)}\r\n                </StepContent>\r\n              </Step>\r\n            </Stepper>\r\n          </Card>\r\n          <Dialog2\r\n            modal={true}\r\n            open={confirmationModalOpen}\r\n            actions={modalActions}\r\n            title=\"Confirm your appointment\"\r\n          >\r\n            {this.renderAppointmentConfirmation()}\r\n          </Dialog2>\r\n\r\n          <Dialog\r\n            open={agreementModalOpen}\r\n            onClose={() => this.setState({ agreementModalOpen: false })}\r\n          >\r\n            <DialogTitle>Terms and Agreement</DialogTitle>\r\n            <DialogContent dividers={true}>\r\n              <DialogContentText>{this.renderAgreement()}</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={() => this.setState({ agreementModalOpen: false })}\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n              >\r\n                Disagree\r\n              </Button>\r\n              <Button\r\n                onClick={() => this.setState({ agreementModalOpen: false })}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                autoFocus\r\n              >\r\n                Agree\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          <SnackBar\r\n            open={confirmationSnackbarOpen || isLoading}\r\n            message={\r\n              isLoading ? \"Loading... \" : data.confirmationSnackbarMessage || \"\"\r\n            }\r\n            autoHideDuration={10000}\r\n            onRequestClose={() =>\r\n              this.setState({ confirmationSnackbarOpen: false })\r\n            }\r\n          />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AppointmentApp;\r\n","import React, { Component } from \"react\";\r\nimport AppointmentApp from \"./components/AppointmentApp.js\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\nimport { getMuiTheme } from \"material-ui/styles\";\r\nconst muiTheme = getMuiTheme({\r\n  palette: {\r\n    primary1Color: \"#d32f2f\",\r\n    primary2Color: \"#f44336\"\r\n  }\r\n});\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MuiThemeProvider muiTheme={muiTheme}>\r\n          <AppointmentApp />\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"normalize.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}